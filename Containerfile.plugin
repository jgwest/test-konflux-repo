####################################################################################################
# UI build stage
####################################################################################################
FROM docker.io/library/node:18 AS argo-rollouts-ui

# WORKDIR /argo-rollouts/src

COPY /argo-rollouts/ui .

#ADD ["ui/package.json", "ui/yarn.lock", "ui/."]

RUN yarn install --network-timeout 300000

ARG ARGO_VERSION=latest
ENV ARGO_VERSION=$ARGO_VERSION
RUN NODE_ENV='production' yarn build


####################################################################################################
# Rollout Controller Build stage which performs the actual build of argo-rollouts binaries
####################################################################################################
FROM --platform=$BUILDPLATFORM golang:1.23 AS argo-rollouts-build

# WORKDIR /go/src/github.com/argoproj/argo-rollouts

# Copy only go.mod and go.sum files. This way on subsequent docker builds if the
# dependencies didn't change it won't re-download the dependencies for nothing.
COPY argo-rollouts/go.mod argo-rollouts/go.sum ./
RUN go mod download

# Copy UI files for plugin build
COPY --from=argo-rollouts-ui /dist/app ./ui/dist/app

# Perform the build
COPY argo-rollouts . 

# stop make from trying to re-build this without yarn installed
RUN touch ui/dist/node_modules.marker && \
    mkdir -p ui/dist/app && \
    touch ui/dist/app/index.html && \
    find ui/dist

RUN make plugin-linux plugin-darwin plugin-windows


####################################################################################################
# Package the binaries into the image
####################################################################################################

FROM scratch

# For debugging purposes, if you want to run commands inside the container, for example, to see the binaries, you can uncomment this line:
# FROM --platform=$BUILDPLATFORM golang:1.22
# Then run 'docker run -it --rm (container image) bash'


WORKDIR /

COPY --from=argo-rollouts-build /go/dist/kubectl-argo-rollouts-darwin-amd64 /
COPY --from=argo-rollouts-build /go/dist/kubectl-argo-rollouts-darwin-arm64 /
COPY --from=argo-rollouts-build /go/dist/kubectl-argo-rollouts-linux-amd64 /
COPY --from=argo-rollouts-build /go/dist/kubectl-argo-rollouts-linux-arm64 /
COPY --from=argo-rollouts-build /go/dist/kubectl-argo-rollouts-windows-amd64 /

LABEL name="Argo Rollouts Kubectl plugin binaries" \
      summary="Argo Rollouts Kubectl plugin binaries" \
      description="Argo Rollouts Kubectl plugin binaries"

# ENTRYPOINT ["<entrypoint-executable>"]
